<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nuclear.Channels</name>
    </assembly>
    <members>
        <member name="T:Nuclear.Channels.ChannelBase">
            <summary>
            Base abstract Channel Helper class
            </summary>
        </member>
        <member name="P:Nuclear.Channels.ChannelBase.Services">
            <summary>
            ServiceLocator
            </summary>
        </member>
        <member name="P:Nuclear.Channels.ChannelBase.Context">
            <summary>
            Request context
            </summary>
        </member>
        <member name="P:Nuclear.Channels.ChannelBase.ChannelMessageWriter">
            <summary>
            Service that will write IChannelMessage as an output. This is the fastest way to get response from ChannelMethod.
            </summary>
        </member>
        <member name="M:Nuclear.Channels.ChannelBase.RedirectToUrl(System.String,System.Boolean)">
            <summary>
            Redirect to a specified url, https prefix is the default if not provided otherwise
            </summary>
            <param name="url">Specified url to redirect the response</param>
            <param name="isHttps">Url Schema, default is https</param>
        </member>
        <member name="T:Nuclear.Channels.ChannelHost">
            <summary>
            Implementation of ChannelHosting
            </summary>
        </member>
        <member name="P:Nuclear.Channels.ChannelHost.GetHost">
            <summary>
            Get the Singleton Instance
            </summary>
        </member>
        <member name="M:Nuclear.Channels.ChannelHost.#ctor">
            <summary>
            Singleton Design pattern private constructor
            </summary>
        </member>
        <member name="M:Nuclear.Channels.ChannelHost.LoadAssemblies(System.AppDomain,System.String[])">
            <summary>
            Method to load all assemblies containing channels
            </summary>
            <param name="domain">Current AppComain</param>
            <param name="assemblies">Assembly names of your projects</param>
        </member>
        <member name="M:Nuclear.Channels.ChannelHost.LoadAssemblies(System.AppDomain)">
            <summary>
            Load App Domain
            </summary>
            <param name="domain">Current AppDomain</param>
        </member>
        <member name="M:Nuclear.Channels.ChannelHost.StartHosting(System.String)">
            <summary>
            Starts hosting
            </summary>
        </member>
        <member name="T:Nuclear.Channels.ChannelLocator">
            <summary>
            Service that contains all Channels
            </summary>
        </member>
        <member name="M:Nuclear.Channels.ChannelLocator.RegisteredChannels(System.AppDomain)">
            <summary>
            Method that get all Channels
            </summary>
            <param name="domain">Domain with all assemblies</param>
            <returns>List of classes that are decorated with ChannelAttribute</returns>
        </member>
        <member name="T:Nuclear.Channels.ChannelServerBuilder">
            <summary>
            Class that contains method for building channel host
            </summary>
        </member>
        <member name="M:Nuclear.Channels.ChannelServerBuilder.CreateServer">
            <summary>
            Method that creates IChannelHost instance
            </summary>
        </member>
        <member name="T:Nuclear.Channels.Decorators.AuthorizeChannelAttribute">
            <summary>
            Attribute that will require Authorization for specified Channel
            </summary>
        </member>
        <member name="P:Nuclear.Channels.Decorators.AuthorizeChannelAttribute.Schema">
            <summary>
            Auth Schema
            </summary>
        </member>
        <member name="M:Nuclear.Channels.Decorators.AuthorizeChannelAttribute.#ctor(Nuclear.Channels.Authentication.ChannelAuthenticationSchemes)">
            <summary>
            Get the Auth type for the channel
            </summary>
            <param name="schemes">Specified Auth Schemes</param>
        </member>
        <member name="T:Nuclear.Channels.Decorators.ChannelAttribute">
            <summary>
            Attribute that will register specified class as an Channel, 
            If Name property is not set , targeted class name will be used as a base route
            </summary>    
        </member>
        <member name="P:Nuclear.Channels.Decorators.ChannelAttribute.Name">
            <summary>
            Name that will be used as a base route endpoint if specified
            </summary>
        </member>
        <member name="P:Nuclear.Channels.Decorators.ChannelAttribute.Description">
            <summary>
            Description provided for documentation
            </summary>
        </member>
        <member name="P:Nuclear.Channels.Decorators.ChannelAttribute.EnableSessions">
            <summary>
            Enable Sessions 
            </summary>
            <remarks>Default is false</remarks>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelAttribute.#ctor">
            <summary>
            CTOR
            </summary>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelAttribute.#ctor(System.String)">
            <summary>
            CTOR with wanted name for the base route
            </summary>
            <param name="Name">Name of the base route</param>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelAttribute.#ctor(System.Object)">
            <summary>
            Channel Description
            </summary>
            <param name="Description">Description string</param>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelAttribute.#ctor(System.Boolean)">
            <summary>
            Channel Sessions
            </summary>
            <param name="EnableSessions">Enable session storing</param>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelAttribute.#ctor(System.String,System.Object)">
            <summary>
            Channel Name with Description
            </summary>
            <param name="Name">Name of the base route</param>
            <param name="Description">Description string</param>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Channel Name with Sessions
            </summary>
            <param name="Name">Name of the base route</param>
            <param name="EnableSessions">Enable session storing</param>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelAttribute.#ctor(System.Object,System.Boolean)">
            <summary>
            Channel Description with Sessions
            </summary>
            <param name="Description">Description string</param>
            <param name="EnableSessions">Enable session storing</param>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelAttribute.#ctor(System.String,System.Object,System.Boolean)">
            <summary>
            Channel Name with Description and Session storing
            </summary>
            <param name="Name">Name of the base route</param>
            <param name="Description">Description string</param>
            <param name="EnableSessions">Enable session storing</param>
        </member>
        <member name="T:Nuclear.Channels.Decorators.ChannelMethodAttribute">
            <summary>
            Attribute that will targeted method initialize as an Http Endpoint
            </summary>
        </member>
        <member name="P:Nuclear.Channels.Decorators.ChannelMethodAttribute.Schema">
            <summary>
            Auth Schema
            </summary>
        </member>
        <member name="P:Nuclear.Channels.Decorators.ChannelMethodAttribute.HttpMethod">
            <summary>
            Http Method to be used
            </summary>
        </member>
        <member name="P:Nuclear.Channels.Decorators.ChannelMethodAttribute.Description">
            <summary>
            Description of the method
            </summary>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelMethodAttribute.#ctor">
            <summary>
            No Auth CTOR
            </summary>
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelMethodAttribute.#ctor(Nuclear.Channels.Base.Enums.ChannelHttpMethod,System.String)">
            <summary>
            Http Method to be used
            </summary>
            <param name="HttpMethod">Http Method</param>
            <param name="Description">Description to be used in documentation tool</param>        
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelMethodAttribute.#ctor(Nuclear.Channels.Authentication.ChannelAuthenticationSchemes,System.String)">
            <summary>
            Auth Type
            </summary>
            <param name="Schemes">Specified Auth Type for ChannelMethod</param>
            <param name="Description">Description to be used in documentation tool</param>        
        </member>
        <member name="M:Nuclear.Channels.Decorators.ChannelMethodAttribute.#ctor(Nuclear.Channels.Authentication.ChannelAuthenticationSchemes,Nuclear.Channels.Base.Enums.ChannelHttpMethod,System.String)">
            <summary>
            Method to be used and Auth Type
            </summary>
            <param name="Schemes">Specified Auth Type for ChannelMethod</param>
            <param name="HttpMethod">Http Method</param>
            <param name="Description">Description to be used in documentation tool</param>        
        </member>
        <member name="T:Nuclear.Channels.DocumentationTool.ChannelDocument">
            <summary>
            Object containing all information about Channel
            </summary>
        </member>
        <member name="T:Nuclear.Channels.DocumentationTool.ChannelDocumentationService">
            <summary>
            Implementation for IChannelDocumentationService
            </summary>
            <export>
            ExportLifetime is Transient because channels can be imported as a plugins without the need for restart of the application
            </export>
        </member>
        <member name="T:Nuclear.Channels.DocumentationTool.ChannelMethodDocument">
            <summary>
            Object containing all information about ChannelMethod
            </summary>
        </member>
        <member name="T:Nuclear.Channels.DocumentationTool.IChannelDocumentationService">
            <summary>
            Service that autogenerates documentation for all created channels
            </summary>
        </member>
        <member name="T:Nuclear.Channels.IChannelActivator">
            <summary>
            Service that will initialize all ChannelMethods as HTTP Endopints
            </summary>
        </member>
        <member name="M:Nuclear.Channels.IChannelActivator.Execute(System.AppDomain,Nuclear.ExportLocator.Services.IServiceLocator,System.String)">
            <summary>
            Method that will do the initialization of Channels
            </summary>
            <param name="currentDomain">AppDomain with all assemblies</param>
            <param name="Services">IServiceLocator</param>
            <param name="baseURL">Base URL to be exposed for channels</param>
            <exception cref="T:Nuclear.Channels.Base.Exceptions.HttpListenerNotSupportedException"></exception>
        </member>
        <member name="M:Nuclear.Channels.IChannelActivator.AuthenticationOptions(System.Func{System.String,System.String,System.Boolean})">
            <summary>
            Set authentication options
            </summary>
            <param name="basicAuthenticationMethod">Function delegate to be used for basic authentication</param>
        </member>
        <member name="M:Nuclear.Channels.IChannelActivator.AuthenticationOptions(System.Func{System.String,System.Boolean})">
            <summary>
            Set authentication options
            </summary>
            <param name="tokenAuthenticationMethod">Function delegate to be used for token authentication</param>
        </member>
        <member name="T:Nuclear.Channels.IChannelServer">
            <summary>
            Service that will host the Channels
            </summary>
        </member>
        <member name="M:Nuclear.Channels.IChannelServer.LoadAssemblies(System.AppDomain,System.String[])">
            <summary>
            Method to load all assemblies containing channels
            </summary>
            <param name="domain">Current AppDomain</param>
            <param name="assemblies">Assembly names of your projects</param>
        </member>
        <member name="M:Nuclear.Channels.IChannelServer.LoadAssemblies(System.AppDomain)">
            <summary>
            Load Application Domain
            </summary>
            <param name="domain">Current AppDomain</param>
        </member>
        <member name="M:Nuclear.Channels.IChannelServer.AuthenticationOptions(System.Func{System.String,System.Boolean})">
            <summary>
            AuthenticationOptions for Token Authentication
            </summary>
            <param name="tokenAuthenticationMethod">Delegate for token authentication</param>
        </member>
        <member name="M:Nuclear.Channels.IChannelServer.AuthenticationOptions(System.Func{System.String,System.String,System.Boolean})">
            <summary>
            AuthenticationOptions for Basic Authentication
            </summary>
            <param name="basicAuthenticationMethod">Delegate for basic authentication</param>
        </member>
        <member name="M:Nuclear.Channels.IChannelServer.StartHosting(System.String)">
            <summary>
            Starts hosting
            </summary>
            <param name="baseURL">Base url to be provided , if not base url will be http://localhost:4200 </param>
            <exception cref="T:Nuclear.Channels.Base.Exceptions.HttpListenerNotSupportedException"></exception>
        </member>
        <member name="T:Nuclear.Channels.IExecutor">
            <summary>
            Service Contract for ChannelActivator to initialize HttpEndpoints
            </summary>
        </member>
        <member name="M:Nuclear.Channels.IExecutor.MethodExecute(System.Type,System.Threading.CancellationToken)">
            <summary>
            Method that will get all ChannelMethods from inspected Channel
            </summary>
            <param name="channel">Inspected Channel</param>
        </member>
        <member name="M:Nuclear.Channels.IExecutor.StartListening(System.Reflection.MethodInfo,System.Type,System.Threading.CancellationToken)">
            <summary>
            Method that is doing all the heavy lifting, Http endpoint initialization for specified ChannelMethod
            </summary>
            <param name="method">ChannelMethod to be initialized as Http Endpoint</param>
            <param name="channel">Web Channel</param>
        </member>
    </members>
</doc>
